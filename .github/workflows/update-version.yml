name: Update Version and Build

on:
  workflow_dispatch:
    inputs:
      version-specifier:
        description: 'Version to update (major/minor/patch)'
        required: true

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
    - name: Validate input
      run: |
        if [[ "${{ github.event.inputs.version-specifier }}" != "major" && "${{ github.event.inputs.version-specifier }}" != "minor" && "${{ github.event.inputs.version-specifier }}" != "patch" ]]; then
          echo "Error: Invalid version input. Allowed values are 'major', 'minor', and 'patch'."
          exit 1
        fi

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure git
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

    - uses: ./.github/actions/setup

    - name: Update package.json version
      id: update-version
      run: |
        pnpm version --no-git-tag-version ${{ github.event.inputs.version-specifier }}
        node -e 'console.log("version="+require("./package.json").version)' >> $GITHUB_OUTPUT
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      id: cpr
      with:
        title: Update version to ${{ steps.update-version.outputs.version }}
        commit-message: Update version to ${{ steps.update-version.outputs.version }}
        body: "This pull request updates the version to ${{ steps.update-version.outputs.version }}."
        branch: version-${{ steps.update-version.outputs.version }}
        base: main
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.PULL_REQUEST_TOKEN }}

    - name: Enable auto-merge for PR
      if: steps.cpr.outputs.pull-request-number != ''
      run: |
        gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --auto --rebase
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Wait for PR to be merged into main
      if: steps.cpr.outputs.pull-request-number != ''
      uses:
        actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const pull_number = ${{ steps.cpr.outputs.pull-request-number }};
          const checkInterval = 10000;
          let checkCount = 0;

          do {
            const { data: pullRequest } = await github.pulls.get({
              owner,
              repo,
              pull_number
            });
            if (pullRequest.merged) {
              break;
            }
            await new Promise(resolve => setTimeout(resolve, checkInterval));
            checkCount++;
          } while (checkCount < 10);

          if (checkCount === 10) {
            throw new Error('Timed out waiting for pull request to be merged');
          }
    
    - name: Pull main
      if: steps.cpr.outputs.pull-request-number != ''
      run: |
        git pull origin main

    - name: Push new tag
      if: steps.cpr.outputs.pull-request-number != ''
      run: |
        git tag -a ${{ steps.update-version.outputs.version }} -m "Release ${{ steps.update-version.outputs.version }}"
        git push --tags
